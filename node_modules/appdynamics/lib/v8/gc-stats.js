/*
Copyright (c) AppDynamics, Inc., and its affiliates
2015
All Rights Reserved
*/
'use strict';

var BYTES_TO_MB = 1 / (1024 * 1024);

function GCStats(agent) {
  this.agent = agent;
}
exports.GCStats = GCStats;



GCStats.prototype.init = function() {
  var self = this;

  if(!self.agent.appdNative) return;

  var mm = self.agent.metricsManager;
  var numFullGC = mm.createMetric('Garbage Collection', 'Full GCs per minute', null, 'sum');
  var numIncGC = mm.createMetric('Garbage Collection', 'Incremental GCs per minute', null, 'sum');
  var sizeChange = mm.createMetric('Garbage Collection', 'Used heap size change per minute', 'MB', 'sum');
  var lastUsedHeapSize = 0;

  self.agent.appdNative.afterGC(function(gcType, gcFlags, usedHeapSize) {
    switch (gcType) {
      case 'kGCTypeMarkSweepCompact':
        numFullGC.addValue(1);
        break;
      case 'kGCTypeScavenge':
        numIncGC.addValue(1);
        break;
    }

    sizeChange.addValue((usedHeapSize - lastUsedHeapSize) * BYTES_TO_MB);
    lastUsedHeapSize = usedHeapSize;
  });
};
